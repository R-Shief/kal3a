imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets:
        enabled: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        default_connection:       default
        connections:
            default:
                driver:   pdo_mysql
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

old_sound_rabbit_mq:
    connections:
        default:
            host:     '%rabbitmq_host%'
            user:     '%rabbitmq_user%'
            password: '%rabbitmq_pass%'
            port:     '%rabbitmq_port%'
            vhost:    '%rabbitmq_vhost%'
    producers:
        twitter:
            queue_options:    { name: 'twitter' }
        atom:
            queue_options:    { name: 'atom' }
    consumers:
        twitter:
            queue_options:    { name: 'twitter' }
            callback:         bangpound_twitter_streaming.consumer.notification
        atom:
            queue_options:    { name: 'atom' }
            callback:         amqp.callback.noop

sensio_framework_extra:
    view: { annotations: true }

easy_admin:
    site_name: Castle
    design:
        form_theme: vertical
        menu:
            - { label: 'Twitter Streaming', icon: twitter, children: ['StreamParameters'] }
            - { label: Users, entity: User, icon: 'users' }
            - { label: 'kal3a API', route: 'nelmio_api_doc_index', icon: 'cogs' }
            - { label: 'System Health Status', route: 'liip_monitor_health_interface', icon: 'heartbeat' }
            - { label: 'Profile', icon: 'user', children: [ { label: 'Show', route: 'fos_user_profile_show' }, { label: 'Edit', route: 'fos_user_profile_edit' }, { label: 'Change Password', route: 'fos_user_change_password' } ] }
    entities:
        'StreamParameters':
            class: AppBundle\Entity\StreamParameters
            label: Stream Parameters
            list:
                title:  '%%entity_label%%'
                fields: [id, language, track, follow, locations ]
                actions:
                    -
                        name: new
                        label: Add %%entity_label%%
            form:
                fields:
                    -
                        property: language
                        type: language
                        type_options:
                            preferred_choices: ['zh','es','en','hi','ar','pt','bn','ru','jp','ms','te']
                    -
                        property: follow
                        type: collection
                        type_options:
                            entry_options:
                                label: false
                    -
                        property: track
                        type: collection
                        type_options:
                            entry_options:
                                label: false
                    -
                        property: locations
                        type: collection
                        type_options:
                            entry_type: AppBundle\Form\LocationType
                            entry_options:
                                label: false
            new:
                title:  'Create %%entity_label%%'
            edit:
                title: 'Edit %%entity_label%% (#%%entity_id%%)'
        User:
            class: AppBundle\Entity\User
            form:
                fields: ['enabled', 'username', 'email', 'roles', 'lastLogin']

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User

# Doctrine CouchDB Configuration
doctrine_couch_db:
    client:
        host: '%couchdb_host%'
        dbname: '%couchdb_name%'
        user: '%couchdb_user%'
        password: '%couchdb_password%'
    odm:
        auto_mapping: true

# Liip monitor
liip_monitor:
    enable_controller: true
    checks:
        php_extensions: [ intl, mcrypt, curl ]
        writable_directory:
            - '%kernel.cache_dir%'
            - '%kernel.logs_dir%'
        doctrine_dbal:            default
        symfony_version:          ~
        security_advisory:
            lock_file:            '%kernel.root_dir%/../composer.lock'
        rabbit_mq:
            default:
                host:                 '%rabbitmq_host%'
                port:                 '%rabbitmq_port%'
                user:                 '%rabbitmq_user%'
                password:             '%rabbitmq_pass%'
                vhost:                '%rabbitmq_vhost%'

bangpound_guzzle_proxy:
    endpoints:
        elasticsearch:
            base_url: 'http://%elasticsearch_host%:%elasticsearch_port%/%elasticsearch_index_name%/'
        couchdb:
            base_url: 'http://%couchdb_host%:%couchdb_port%/%couchdb_name%/'

ongr_elasticsearch:
    analysis:
        analyzer:
            tag_analyzer:
                filter:
                    - lowercase
                    - trim
                    - unique
                tokenizer: keyword
    connections:
        default:
            index_name: '%elasticsearch_index_name%'
            analysis:
                analyzer:
                    - tag_analyzer
    managers:
        default:
            index:
                index_name: '%elasticsearch_index_name%'
            mappings:
                - AppBundle

fos_rest:
    param_fetcher_listener: force
    format_listener:
        enabled: true
        rules:
            - { path: '^/api/doc', stop: true }
            - { path: '^/api', priorities: ['json'] }
            - { path: '^/', stop: true }
    view:
        view_response_listener:
            enabled: true

nelmio_api_doc:
    sandbox:
        request_format:
            method: accept_header

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: ['Content-Type']
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
    paths:
        '^/couchdb':
            allow_credentials: true
            allow_origin: ['*']
            allow_methods: ['GET', 'POST']
            max_age: 3600
        '^/elasticsearch':
            allow_origin: ['*']
            allow_methods: ['GET', 'POST']
            max_age: 3600
        '^/tagstatistic/summary.json':
            allow_origin: ['*']
            allow_methods: ['GET']
            max_age: 3600

yz_supervisor:
    default_environment: dev
    servers:
        dev:
            locahost:
                host: 127.0.0.1
                username: user
                password: 123
                port: 9001

aws:
    version: latest
    region: '%aws_region%'
    credentials:
        key: '%aws_access_key_id%'
        secret: '%aws_secret_access_key%'
    endpoint_provider: '@aws.endpoint.provider'
    scheme: http

imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: elasticsearch.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        castle_type_names: %bangpound_castle.types.lower%

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ BangpoundCastleSearchBundle, RshiefKal3aBundle, BangpoundCastleBundle ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        compass:
            load_paths:
                - "%kernel.root_dir%/../web/vendor/bootstrap-sass/lib"
            apply_to: "\.(scss|sass)$"
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        default_connection:       default
        connections:
            default:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
                mapping_types:
                    enum: string
                    polygon: Polygon
                    point: Point
            collector:
                driver:   %database_driver%
                host:     %database_host%
                port:     %database_port%
                dbname:   rshief0_collector
                user:     %database_user%
                password: %database_password%
                charset:  UTF8
        types:
            json:       Bangpound\Bundle\TwitterStreamingBundle\Types\JsonType
            Geometry:   CrEOF\Spatial\DBAL\Types\GeometryType
            Point:      CrEOF\Spatial\DBAL\Types\Geometry\PointType
            Polygon:    CrEOF\Spatial\DBAL\Types\Geometry\PolygonType
            LineString: CrEOF\Spatial\DBAL\Types\Geometry\LineStringType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        mappings:
            ApplicationSonataUserBundle: ~


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

old_sound_rabbit_mq:
    enable_collector: true
    connections:
        default:
            host:     %rabbitmq_host%
            user:     %rabbitmq_user%
            password: %rabbitmq_pass%
            port:     %rabbitmq_port%
            vhost:    %rabbitmq_vhost%
    producers:
        twitter:
            connection:       default
            exchange_options: { name: 'twitter', type: direct }
            queue_options:    { name: 'twitter_stream', routing_keys: [ 'twitter_data.tweet' ] }
        pubsub:
            connection:       default
            exchange_options: { name: 'pubsub', type: direct }
            queue_options:    { name: 'pubsub', routing_keys: [ 'pubsub_notification' ] }
    consumers:
        twitter:
            connection:       default
            exchange_options: { name: 'twitter', type: direct }
            queue_options:    { name: 'twitter_stream', routing_keys: [ 'twitter_data.tweet' ] }
            callback:         bangpound_twitter_streaming.consumer.notification
        pubsub:
            connection:       default
            exchange_options: { name: 'pubsub', type: direct }
            queue_options:    { name: 'pubsub', routing_keys: [ 'pubsub_notification' ] }
            callback:         rshief_bundle.consumer.notification

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:

        bangpound_castle_search.block.view:
        bangpound_castle_search.block.date_view:
        bangpound_castle_search.block.top_tag_view:
        bangpound_castle_search.block.collection_view:

sonata_doctrine_orm_admin:
    # default value is null, so doctrine uses the value defined in the configuration
    entity_manager: ~

sonata_admin:
    title:      kal3a
    title_logo: /images/logo_title.png
    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User
    group:
        group_class: Application\Sonata\UserBundle\Entity\Group

sensio_framework_extra:
    router:  { annotations: true }
    request: { converters: true }
    view:    { annotations: false }
    cache:   { annotations: true }

# Doctrine CouchDB Configuration
doctrine_couch_db:
    client:
        connections:
            default:
                dbname: %doctrine_couch_db.default.dbname%
                user: %doctrine_couch_db.default.user%
                password: %doctrine_couch_db.default.password%
            stats:
                dbname: %doctrine_couch_db.default.dbname%_stats
                user: %doctrine_couch_db.default.user%
                password: %doctrine_couch_db.default.password%
            trends:
                dbname: %doctrine_couch_db.default.dbname%_trends
                user: %doctrine_couch_db.default.user%
                password: %doctrine_couch_db.default.password%
    odm:
        auto_mapping: true

# Liip monitor
liip_monitor:
    enable_controller: true
    checks:
        php_extensions: [ intl, mcrypt, curl ]
        writable_directory:
            - %kernel.cache_dir%
            - %kernel.logs_dir%
        doctrine_dbal:            default
        symfony_version:          ~
        security_advisory:
            lock_file:            %kernel.root_dir%/../composer.lock
        http_service:
            couchdb:
                host:                 localhost
                port:                 5984
                path:                 /
                status_code:          200
                content:              null
            elasticsearch:
                host:                 localhost
                port:                 9200
                path:                 /
                status_code:          200
                content:              null
        rabbit_mq:
            default:
                host:                 localhost
                port:                 5672
                user:                 guest
                password:             guest
                vhost:                /

bangpound_guzzle_proxy:

ushios_elastic_search:
    client:
        default:
            hosts: [ "localhost:9200" ]

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'

sp_bower:
    bundles:
        BangpoundAngularJsBundle: ~
    assetic:
        enabled:              true
        nest_dependencies: false

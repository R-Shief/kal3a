# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value
    bangpound_castle_search.controller.statistics.class: AppBundle\Controller\StatisticsController
    bangpound_castle.command.export.class: AppBundle\Command\ExportCommand
    bangpound_castle.command.prune.class: AppBundle\Command\PruneCommand
    bangpound_castle.command.update_view.class: AppBundle\Command\UpdateViewCommand
    rshief_kal3a.command.copy_trends.class: AppBundle\Command\CopyTrendsCommand
    rshief_kal3a.command.calculate_trends.class: AppBundle\Command\CalculateTrendsCommand
    rshief_kal3a.controller.tag_statistics.class: AppBundle\Controller\StatisticController
    rshief_kal3a.listener.default_response_header.class: Rshief\Bundle\Kal3aBundle\EventListener\DefaultResponseHeaderListener

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    # workaround for implicit dependency on PHP templating library.
    # see https://github.com/liip/LiipMonitorBundle/issues/125#issuecomment-220337440
    templating.helper.assets: '@assets.packages'
    templating.helper.router: '@router'

    session.memcached:
        class: Memcached
        arguments:
            persistent_id: 'sess'
        calls:
            - [ addServer, [ 'localhost', '11211' ]]

    session.handler.memcached:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: ['@session.memcached', { prefix: 'sess', expiretime: 3600 }]

    check_couchdb:
        class: ZendDiagnostics\Check\CouchDBCheck
        arguments:
            -
                dbname: '%couchdb_name%'
                host: '%couchdb_host%'
                protocol: 'http'
                port: '%couchdb_port%'
                username: '%couchdb_user%'
                password: '%couchdb_password%'
        calls:
            - [ setLabel, ['CouchDB']]
        tags:
            - { name: liip_monitor.check, alias: couchdb }

    check_elasticsearch:
        class: ZendDiagnostics\Check\GuzzleHttpService
        arguments:
            - 'http://%elasticsearch_host%:%elasticsearch_port%/_cluster/health'
            - []
            - []
            - 200
            - status
        calls:
            - [ setLabel, ['Elasticsearch']]
        tags:
            - { name: liip_monitor.check, alias: elasticsearch }

    amqp.callback.noop:
        class: AppBundle\RabbitMQ\NoopMessageConsumer

    bangpound_guzzle_proxy.client.couchdb:
        parent: bangpound_guzzle_proxy.client
        arguments:
          -
            base_url: 'http://%couchdb_host%:%couchdb_port%/%couchdb_name%/'
            auth: ['%couchdb_user%', '%couchdb_password%']
            handler: '@guzzle_handler'

    bangpound_guzzle_proxy.client.elasticsearch:
        parent: bangpound_guzzle_proxy.client
        arguments:
          -
            base_url: 'http://%elasticsearch_host%:%elasticsearch_port%/%elasticsearch_index_name%/'
            handler: '@guzzle_handler'

    monolog.processor.psr_log_message_processor:
        class: Monolog\Processor\PsrLogMessageProcessor
        tags:
            - { name: monolog.processor }

    aws.endpoint.provider:
        class: Aws\Endpoint\PatternEndpointProvider
        arguments: ['%aws_endpoint_map%']

    aws.signature.provider:
        class: Aws\Signature\SignatureInterface
        factory: ['AppBundle\Security\SignatureProvider', 'create']

    s3_consumer:
        class: AppBundle\Consumer\S3Consumer
        arguments: ['@aws.s3']

    atom_consumer:
        class: AppBundle\Consumer\AtomConsumer
        arguments: ['@old_sound_rabbit_mq.atom_producer', '@consumer_matcher', '@serializer']

    elasticsearch_consumer:
        class: AppBundle\Consumer\ElasticsearchConsumer
        arguments: ['AppBundle\Document\AtomEntry', '@bulk_consumer.elasticsearch']
        calls:
            - ['setSerializer', ['@serializer']]

    custom_normalizer:
        class: Symfony\Component\Serializer\Normalizer\CustomNormalizer
        public: false
        tags:
            - { name: serializer.normalizer }

    property_info_type_extractor:
        class: AppBundle\Extractor\PropertyInfoTypeExtractor
        arguments: ['@annotation_reader']
        tags:
            - { name: property_info.type_extractor }

    couchdb_consumer:
        class: AppBundle\Consumer\CouchDbConsumer
        arguments: [ 'AppBundle\CouchDocument\AtomEntry', "@bulk_consumer.couchdb" ]
        calls:
            - [ 'setSerializer', ['@serializer']]

    rabbitmq_api_client:
        class: GuzzleHttp\Client
        arguments:
            -
                base_uri: 'http://%rabbitmq_host%:15672/api/'
                auth: ['%rabbitmq_user%', '%rabbitmq_pass%']

    guzzle_handler:
        class: GuzzleHttp\HandlerStack
        factory: ['GuzzleHttp\HandlerStack', 'create']
        calls:
            - [ 'remove', ['http_errors']]
            - [ 'remove', ['allow_redirects']]
            - [ 'remove', ['cookies']]

    stream_parameters.repository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
        arguments: ['AppBundle\Entity\StreamParameters']

    app.controller.collection_parameters_controller:
        class: AppBundle\Controller\StreamParametersController
        arguments: ['@stream_parameters.repository']

    bangpound_castle_search.controller.statistics:
        class: '%bangpound_castle_search.controller.statistics.class%'
        arguments:
            - "@doctrine_couchdb.client.default_connection"

    bangpound_castle.command.export:
        class: '%bangpound_castle.command.export.class%'
        tags:
            - { name: console.command }

    bangpound_castle.command.prune:
        class: '%bangpound_castle.command.prune.class%'
        tags:
            - { name: console.command }

    bangpound_castle.command.update_view:
        class: '%bangpound_castle.command.update_view.class%'
        tags:
            - { name: console.command }

    rshief_kal3a.command.copy_trends:
        class: '%rshief_kal3a.command.copy_trends.class%'
        tags:
            -  { name: console.command }

    rshief_kal3a.command.calculate_trends:
        class: '%rshief_kal3a.command.calculate_trends.class%'
        tags:
            -  { name: console.command }

    rshief_kal3a.controller.tag_statistics:
        class: '%rshief_kal3a.controller.tag_statistics.class%'

    bulk_consumer.couchdb:
        class: AppBundle\BulkCouchDB
        arguments: ['@doctrine_couchdb.client.default_connection', 500]
        calls:
            - [ setLogger, ['@logger']]
        tags:
            - { name: monolog.logger }
            - { name: kernel.event_listener, event: 'console.terminate', method: 'onEvent' }

    bulk_consumer.elasticsearch:
        class: AppBundle\BulkElasticsearch
        arguments: ['@es.manager.default', 500]
        calls:
            - [ setLogger, ['@logger']]
        tags:
            - { name: monolog.logger }
            - { name: kernel.event_listener, event: 'console.terminate', method: 'onEvent' }

    consumer_matcher:
        class: AppBundle\Matcher
        arguments: ['@stream_parameters.repository']

    admin_security_subscriber:
        class: AppBundle\EventListener\AdminSecuritySubscriber
        arguments: ['@security.authorization_checker']
        tags:
            - { name: kernel.event_subscriber }

    admin_acl_subscriber:
        class: AppBundle\EventListener\AdminAclSubscriber
        arguments: ['@security.token_storage', '@acl_manager']
        tags:
            - { name: kernel.event_subscriber }

    acl_manager:
        class: AppBundle\Security\AclManager
        arguments: ['@security.acl.dbal.provider']

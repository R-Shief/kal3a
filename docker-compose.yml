version: "3"
services:
    consul:
        image: consul:latest
        ports:
            - 8500:8500
            - 8600:8600

    memcached:
        image: memcached

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
        ports:
            - 9200:9200
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false

    couchdb:
        image: couchdb:2.1
        environment:
            COUCHDB_USER: couchdb
            COUCHDB_PASSWORD: couchdb
        ports:
            - 5984:5984

    rabbitmq:
        image: rabbitmq:3.7-management
        ports:
            - 15672:15672

    mysql:
        image: mysql:5.7
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    web:
        build:
            context: ./docker/web
        volumes:
              - .:/srv/kal3a
        ports:
            - 8000:80
        depends_on:
          - fpm

    fpm:
        build:
            context: ./docker/fpm
        volumes:
              - .:/srv/kal3a
        depends_on:
            - consul
            - memcached
            - couchdb
            - elasticsearch
            - mysql

    twitter_collector:
        build:
            context: ./docker/worker
        volumes:
              - .:/srv/kal3a
        working_dir: /srv/kal3a
        command: [bin/nab3a, pipe, -vvv]
        depends_on:
            - web

    consume_elasticsearch:
        build:
            context: ./docker/worker
        volumes:
              - .:/srv/kal3a
        working_dir: /srv/kal3a
        command: [bin/console, --env=prod, 'rabbitmq:consumer', atom_elasticsearch, -m, '2000']
        depends_on:
            - elasticsearch
            - rabbitmq

    consume_atom:
        build:
            context: ./docker/worker
        volumes:
              - .:/srv/kal3a
        working_dir: /srv/kal3a
        command: [bin/console, --env=prod, 'rabbitmq:consumer', twitter_atom, -m, '2000']
        depends_on:
            - rabbitmq

    consume_couchdb:
        build:
            context: ./docker/worker
        volumes:
              - .:/srv/kal3a
        working_dir: /srv/kal3a
        command: [bin/console, --env=prod, 'rabbitmq:consumer', atom_couchdb, -m, '2000']
        depends_on:
            - rabbitmq
            - couchdb

    composer:
        image: composer
        environment:
            - COMPOSER_AUTH
        volumes:
            - .:/app
        tty: true

    console:
        build:
            context: ./docker/worker
        volumes:
              - .:/srv/kal3a
        working_dir: /srv/kal3a
        entrypoint: bin/console
